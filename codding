import random

class Monoalphabet:
    alphabet = ""

    def __init__(self, keytable):
        lowercase_code = {self.alphabet[i]:keytable[i] for i in range(len(self.alphabet))}
        uppercase_code = {self.alphabet[i].upper():keytable[i].upper() for i in range(len(self.alphabet))}
        self._encode = dict(lowercase_code)
        self._encode.update(uppercase_code)
        self._decode = {}

    def encode(self, line):
        if len(line) == 1:
            return self._encode[line] if line in self._encode else line
        else:
            return ''.join([self.encode(char) for char in line])

    def decode(self, line):
        if len(line) == 1:
            return self._decode[line] if line in self._decode else line
        else:
            return ''.join([self.decode(char) for char in line])

A = [0.062, 0.014, 0.038, 0.013, 0.025]
B = []
L = input().split()
'''for i in range(len(line)):
    k=0
    j=i+1
    for j in range (len(line)):
        if A[j]==A[i]:
            k+=1
    B.append(k)'''
for i in range (len(L)):
    b=L.count(L[i])
    B.append(b)
print (B)
print (L)

'''key = Monoalphabet.alphabet[:]
l=list(key)
random.shuffle(l)
key=' '.join(l)
cipher = Monoalphabet(key)
line = input()
while line:
    print(cipher.encode(line))
    line = input()

while line:
    print(cipher.decode(line))
    line = input()'''
